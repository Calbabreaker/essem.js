{"version":3,"file":"essem.js","sources":["../src/utils/misc.ts","../src/utils/browser.ts","../src/utils/colors.ts","../src/renderer/renderer.ts","../src/ecs/entity.ts","../src/utils/object_pool.ts","../src/ecs/scene.ts","../src/math/common.ts","../src/math/vector2.ts","../src/core/event_manager.ts","../src/core/input_events.ts","../src/core/canvas.ts","../src/core/audio_clip.ts","../src/renderer/texture.ts","../src/core/loader.ts","../src/core/application.ts","../src/math/matrix3.ts","../src/ecs/components/camera_component.ts","../src/ecs/components/sprite_component.ts","../src/ecs/components/transform_component.ts","../src/ecs/system.ts","../src/ecs/systems/camera_system.ts","../src/renderer/shader.ts","../src/renderer/vertex_array.ts","../src/renderer/abstract_batch_renderer.ts","../src/ecs/systems/sprite_renderer_system.ts","../src/index.ts"],"sourcesContent":["import { AnyCtor } from \"./types\";\n\n/**\n * Error class that is used for {@link ESSEM.assert}.\n *\n * @memberof ESSEM\n */\nexport class AssertionError extends Error {\n    constructor(message?: string) {\n        super(message);\n        this.name = \"AssertionError\";\n    }\n}\n\n/**\n * Throws an error if condition is false.\n * All uses if this in the essem.js code will get removed in minified files.\n *\n * @memberof ESSEM\n * @param condition - The condition to assert.\n * @param message - The message to use in the Error.\n * @return {void}\n */\nexport function assert(condition: boolean, message?: string): asserts condition {\n    if (!condition) throw new AssertionError(message);\n}\n\n/**\n * Gets an item from the map using a key and sets it with a new instance of the class of it\n * doesn't  exist.\n *\n * @param map - The map to use.\n * @param key - The key of the item.\n * @param defaultClass - The class to create a new instance from.\n * @return The value that was retrieved.\n */\nexport function mapGet<K, V>(map: Map<K, V>, key: K, defaultClass: AnyCtor<V>): V {\n    if (!map.has(key)) map.set(key, new defaultClass());\n    return map.get(key) as V;\n}\n\n/**\n * Removes an item from an array by swapping the last element with the removing element and popping\n * the array.\n *\n * @param array - The array to use.\n * @param index - The index to remove.\n * @return The last item of the array that was swapped to the index.\n */\nexport function lastItemSwapRemove<T>(array: T[], index: number): T {\n    const lastItem = array[array.length - 1];\n    array[index] = lastItem;\n    array.pop();\n    return lastItem;\n}\n\nexport function getTypeName<T>(type: AnyCtor<T> | string): string {\n    return (type as AnyCtor<T>).name ?? type;\n}\n","// caches the result from webgl2Supported function\nlet webgl2Supported: boolean | undefined;\n\n/**\n * Checks to see if WebGL2 is supported in the browser.\n *\n * @memberof ESSEM\n * @return Whether or not WebGL2 is supported.\n */\nexport function isWebGL2Supported(): boolean {\n    if (webgl2Supported === undefined) {\n        const canvasElm = document.createElement(\"canvas\");\n        const gl = canvasElm.getContext(\"webgl2\");\n\n        webgl2Supported = gl !== undefined;\n    }\n\n    return webgl2Supported;\n}\n\nlet saidHello = false;\n\n/**\n * Says hello in essem.js style. Gets called once when the application finishes initiating.\n *\n * @memberof ESSEM\n */\nexport function sayHello(): void {\n    if (!saidHello) {\n        // TODO: make this look better\n        console.log(\"---\\n--- essem.js v$_VERSION\\n---\");\n        saidHello = true;\n    }\n}\n\n/**\n * Skips the essem.js hello message.\n *\n * @memberof ESSEM\n */\nexport function skipHello(): void {\n    saidHello = true;\n}\n","/**\n * Converts hexadecimal number to a rbga array.\n *\n * @memberof ESSEM\n * @param hex - Hexadecimal number. Alpha channel is default to 1.\n * @return RGBA array with values from 0 to 1.\n */\nexport function hexToRGBA(hex: number): Float32Array {\n    const rgb = new Float32Array(4);\n    if (hex <= 0xffffff) {\n        rgb[0] = ((hex >> 16) & 0xff) / 255;\n        rgb[1] = ((hex >> 8) & 0xff) / 255;\n        rgb[2] = (hex & 0xff) / 255;\n        rgb[3] = 1;\n    } else {\n        rgb[0] = ((hex >> 24) & 0xff) / 255;\n        rgb[1] = ((hex >> 16) & 0xff) / 255;\n        rgb[2] = ((hex >> 8) & 0xff) / 255;\n        rgb[3] = (hex & 0xff) / 255;\n    }\n\n    return rgb;\n}\n","import { assert } from \"src/utils/misc\";\nimport { isWebGL2Supported } from \"src/utils/browser\";\nimport { hexToRGBA } from \"src/utils/colors\";\n\nexport class Renderer {\n    readonly gl: WebGL2RenderingContext;\n    readonly maxTextureSlots: number;\n\n    constructor(canvasElement: HTMLCanvasElement) {\n        if (isWebGL2Supported()) {\n            const gl = canvasElement.getContext(\"webgl2\");\n            assert(gl !== null, \"Failed to create WebGL2 context\");\n            this.gl = gl;\n\n            this.maxTextureSlots = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        } else {\n            alert(\"WebGL2 is not supported in your browser!\");\n            throw new Error(\"WebGL2 not supported!\");\n        }\n    }\n\n    update(): void {\n        const gl = this.gl;\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n\n    set backgroundColor(hexColor: number) {\n        const rgbColor = hexToRGBA(hexColor);\n        this.gl.clearColor(rgbColor[0], rgbColor[1], rgbColor[2], rgbColor[3]);\n    }\n}\n","import { assert, getTypeName } from \"src/utils/misc\";\nimport { AnyCtor } from \"src/utils/types\";\nimport { Scene } from \"./scene\";\n\n// basically any object\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type Component = Object;\nexport type ComponentClass = AnyCtor<Component>;\n\n/**\n * Entity class to handle components in ecs.\n *\n * @memberof ESSEM\n */\nexport class Entity {\n    /**\n     * The child entities of the entity mapped by their name.\n     */\n    children: Map<string, Entity> = new Map();\n\n    /**\n     * Identifier of the entity, only unique to its scene.\n     */\n    readonly id: number;\n\n    // these variables are private and are accessed by getters\n    private _active = false;\n    private _activeSelf = false;\n    private _destroyed = true;\n    private _name = \"\";\n    private _parent: Entity | Scene | null = null;\n\n    _systemIndexMap: Map<string, number> = new Map();\n    _tagIndexMap: Map<string, number> = new Map();\n    private _componentMap: Map<string, Component> = new Map();\n    private _scene: Scene;\n\n    constructor(id: number, scene: Scene) {\n        this.id = id;\n        this._scene = scene;\n    }\n\n    /**\n     * Adds a new component to the entity.\n     *\n     * @param {Component} component - Any object that is an instance of a class. Same named classes\n     *        will be considered as the same component.\n     * @return {Component} The component that was added.\n     */\n    addComponent<T extends Component>(component: T): T {\n        const typeName = component.constructor.name;\n        assert(!this._componentMap.has(typeName), `Component '${typeName}' already exists!`);\n        this._componentMap.set(typeName, component);\n\n        if (this.active) this._scene._entityComponentAdd(this, typeName);\n        return component as T;\n    }\n\n    /**\n     * Removes a component from the entity.\n     *\n     * @param componentType - The component name or class to remove.\n     *        Same named classes will be considered as the same component.\n     */\n    removeComponent(componentType: ComponentClass | string): void {\n        const typeName = getTypeName(componentType);\n        assert(this._componentMap.has(typeName), `Component '${typeName}' does not exist!`);\n\n        if (this.active) this._scene._entityComponentRemove(this, typeName);\n        this._componentMap.delete(typeName);\n    }\n\n    /**\n     * Checks to see if the component is on the entity.\n     *\n     * @param componentType - The component name or class to check.\n     *        Same named classes will be considered as the same component.\n     * @return Whether or not the entity has the component.\n     */\n    hasComponent(componentType: ComponentClass | string): boolean {\n        const typeName = getTypeName(componentType);\n        return this._componentMap.has(typeName);\n    }\n\n    /**\n     * Checks to see if all the components specified are on the entity.\n     *\n     * @param componentType - An array of the component names or classes to check.\n     *        Same named classes will be considered as the same component.\n     * @return Whether or not the entity has all the components.\n     */\n    hasAllComponents(componentTypes: (ComponentClass | string)[]): boolean {\n        for (let i = 0; i < componentTypes.length; i++) {\n            if (!this.hasComponent(componentTypes[i])) return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Gets a component from the entity.\n     *\n     * @param {ComponentClass | string} componentType - The component name or class to get.\n     *        Same named classes will be considered as the same component.\n     * @return {Component} The component that was retrieved.\n     */\n    getComponent<T extends Component>(componentType: AnyCtor<T> | string): T {\n        const typeName = getTypeName(componentType);\n        const component = this._componentMap.get(typeName);\n        assert(component !== undefined, `Component '${typeName}' does not exist!`);\n        return component as T;\n    }\n\n    addTag(tag: string): void {\n        if (this.active) {\n            return this._scene._entityTagAdd(this, tag);\n        }\n\n        this._tagIndexMap.set(tag, 0);\n    }\n\n    hasTag(tag: string): boolean {\n        return this._tagIndexMap.has(tag);\n    }\n\n    removeTag(tag: string): void {\n        if (this.active) this._scene._entityTagRemove(this, tag);\n    }\n\n    /**\n     * Whether or not the entity is active.\n     * Making the entity unactive will remove it from systems and the scene tag collection and put\n     * back when active.\n     * Setting the value will make all its children be the same active state unless the child is\n     * explicitly set to be not active and the parent(s) is set to be active.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    set active(active: boolean) {\n        if (\n            this._destroyed ||\n            this.active === active ||\n            (this.parent instanceof Entity && !this.parent.active)\n        ) {\n            return;\n        }\n\n        this._setActive(active);\n        this._activeSelf = active;\n\n        this.forEachChildrenRecursive((child) => {\n            child._setActive(active && child.activeSelf);\n        });\n    }\n\n    /**\n     * The local active state.\n     * This will be regardless of its parents` active states.\n     *\n     * @readonly\n     */\n    get activeSelf(): boolean {\n        return this._activeSelf;\n    }\n\n    private _setActive(active: boolean): void {\n        if (this.active === active) return;\n        this._active = active;\n\n        // remove entity listing from components and tags\n        if (this._componentMap.size !== 0) {\n            for (const [typeName] of this._componentMap) {\n                active\n                    ? this._scene._entityComponentAdd(this, typeName)\n                    : this._scene._entityComponentRemove(this, typeName);\n            }\n        }\n\n        if (this._tagIndexMap.size !== 0) {\n            for (const [tag] of this._tagIndexMap) {\n                active ? this.addTag(tag) : this._scene._entityTagRemove(this, tag);\n            }\n        }\n    }\n\n    /**\n     * Parent of the entity. Could be either another entity, the scene or none at all.\n     */\n    get parent(): Entity | Scene | null {\n        return this._parent;\n    }\n\n    set parent(parent: Entity | Scene | null) {\n        // remove this entity from parent\n        if (this._parent !== null) {\n            this._parent.children.delete(this._name);\n        }\n\n        // add to parent\n        if (parent !== null) {\n            assert(\n                !parent.children.has(this._name),\n                `Other child with name '${this._name}' already exist!`\n            );\n            parent.children.set(this._name, this);\n        }\n\n        this._parent = parent;\n    }\n\n    /**\n     * The name of the entity.\n     */\n    get name(): string {\n        return this._name;\n    }\n\n    set name(name: string) {\n        this._name = name;\n        this.parent = this._parent;\n    }\n\n    forEachParent(func: (parent: Entity) => void): void {\n        if (this._parent instanceof Entity) {\n            func(this._parent);\n            this._parent.forEachParent(func);\n        }\n    }\n\n    forEachChildrenRecursive(func: (child: Entity) => void): void {\n        this.children.forEach((child) => {\n            func(child);\n            if (child.children.size !== 0) child.forEachChildrenRecursive(func);\n        });\n    }\n\n    /**\n     * Whether or not the entity is destroyed.\n     *\n     * @readonly\n     */\n    get destroyed(): boolean {\n        return this._destroyed;\n    }\n\n    /**\n     * Gets called when creating a new entity from the scene.\n     *\n     * @private\n     */\n    _setup(name: string, parent: Entity | Scene): void {\n        if (!this.destroyed) return;\n\n        this._activeSelf = true;\n        this._setActive(true);\n        this._destroyed = false;\n        this._parent = parent;\n        this.name = name;\n    }\n\n    /**\n     * Gets called when deleting the entity from the scene.\n     *\n     * @private\n     */\n    _destroy(): void {\n        if (this.destroyed) return;\n\n        this._setActive(false);\n        this._destroyed = true;\n        this._componentMap.clear();\n        this._tagIndexMap.clear();\n\n        this.parent = null;\n    }\n}\n","export type ObjectClassType<T, M> = new (id: number, objectManager: M) => T;\n\nexport class ObjectPool<T, M = undefined> {\n    objectClass: ObjectClassType<T, M>;\n    objectManager: M;\n    availableObjects: T[] = [];\n    totalObjects: number = 0;\n\n    constructor(objectClass: ObjectClassType<T, M>, objectManager: M) {\n        this.objectClass = objectClass;\n        this.objectManager = objectManager;\n    }\n\n    aquire(): T {\n        if (this.availableObjects.length === 0) {\n            // resize by 20%\n            this.reserve(Math.ceil(this.totalObjects * 1.2) - this.totalObjects);\n        }\n\n        const newObject = this.availableObjects.pop();\n        return newObject as T;\n    }\n\n    release(object: T): void {\n        this.availableObjects.push(object);\n    }\n\n    reserve(count: number): void {\n        for (let i = 0; i < count; i++) {\n            this.availableObjects.push(\n                new this.objectClass(i + this.totalObjects, this.objectManager)\n            );\n        }\n\n        this.totalObjects += count;\n    }\n}\n","import { Entity } from \"./entity\";\nimport { assert, mapGet, lastItemSwapRemove } from \"src/utils/misc\";\nimport { System } from \"./system\";\nimport { ObjectPool } from \"src/utils/object_pool\";\nimport { ArrayCtor } from \"src/utils/types\";\n\n/**\n * Handles all the entities.\n * Use the application to create the scene.\n *\n * ## Example\n * ```js\n * // Create application and scene\n * const app = new ESSEM.Application();\n * const scene = app.createScene();\n *\n * // Create entities, add components\n * const entity = scene.createEntity(\"MyEntity\");\n * entity.addComponent(new ESSEM.SpriteRendererComponent(texture));\n * entity.addComponent(new ESSEM.TransformComponent())\n * ```\n *\n * @memberof ESSEM\n */\nexport class Scene {\n    /**\n     * The instances of the systems for the scene that are registered.\n     */\n    systems: System[] = [];\n\n    /**\n     * A map containing scene entities mapped by their entity names.\n     */\n    children: Map<string, Entity> = new Map();\n\n    entityPool: ObjectPool<Entity, Scene>;\n\n    private _typeNameToSystem: Map<string, System[]> = new Map();\n    private _tagToEntities: Map<string, Entity[]> = new Map();\n\n    constructor() {\n        this.entityPool = new ObjectPool<Entity, Scene>(Entity, this);\n        this.entityPool.reserve(100);\n    }\n    /**\n     * Creates a new entity that is aquired from a pool for efficency.\n     *\n     * @param [name=`Unnamed Entity ${entity.id}`] - The name of the entity.\n     * @param parent - The parent for the entity. Default is the scene.\n     * @return The entity that was created.\n     */\n    createEntity(name?: string, parent: Entity | Scene = this): Entity {\n        const entity = this.entityPool.aquire();\n        entity._setup(name ?? `Unnamed Entity ${entity.id}`, parent);\n        return entity;\n    }\n\n    /**\n     * Destroys the entity and all it's children and release them back to the entity pool.\n     *\n     * @param entity - Entity to destroy.\n     */\n    destroyEntity(entity: Entity): void {\n        entity._destroy();\n        this.entityPool.release(entity);\n\n        entity.forEachChildrenRecursive((child) => {\n            child._destroy();\n            this.entityPool.release(child);\n        });\n    }\n\n    /**\n     * Gets all the entities that tagged with the tag.\n     *\n     * @param tag - The tag to use.\n     * @return An array of entities with the tag.\n     */\n    getEntitesByTag(tag: string): Entity[] {\n        return mapGet(this._tagToEntities, tag, Array as ArrayCtor<Entity>);\n    }\n\n    /**\n     * Gets called whenever a component gets added to an entity.\n     *\n     * @private\n     */\n    _entityComponentAdd(entity: Entity, typeName: string): void {\n        const systems = mapGet(this._typeNameToSystem, typeName, Array as ArrayCtor<System>);\n        systems.forEach((system) => {\n            if (entity._systemIndexMap.has(system.constructor.name)) return;\n\n            if (entity.hasAllComponents(system.typeNames)) {\n                entity._systemIndexMap.set(system.constructor.name, system.entities.length);\n                system.entities.push(entity);\n                if (system.onEntityAdd !== undefined) {\n                    system.onEntityAdd(entity);\n                }\n            }\n        });\n    }\n\n    /**\n     * Gets called whenever a component gets removed from an entity.\n     *\n     * @private\n     */\n    _entityComponentRemove(entity: Entity, typeName: string): void {\n        const systems = mapGet(this._typeNameToSystem, typeName, Array as ArrayCtor<System>);\n        systems.forEach((system) => {\n            const entityIndex = entity._systemIndexMap.get(system.constructor.name);\n            if (entityIndex === undefined) return;\n\n            // swap last element to avoid shifting entities\n            const lastEntity = lastItemSwapRemove(system.entities, entityIndex);\n            lastEntity._systemIndexMap.set(system.constructor.name, entityIndex);\n            entity._systemIndexMap.delete(system.constructor.name);\n        });\n    }\n\n    /**\n     * Gets called whenever a tag gets removed from an entity.\n     *\n     * @private\n     */\n    _entityTagRemove(entity: Entity, tag: string): void {\n        const entities = mapGet(this._tagToEntities, tag, Array as ArrayCtor<Entity>);\n        const index = entity._tagIndexMap.get(tag);\n        assert(index !== undefined, `Tag ${tag} does not exist!`);\n\n        const lastEntity = lastItemSwapRemove(entities, index);\n        lastEntity._tagIndexMap.set(tag, index);\n        entity._tagIndexMap.delete(tag);\n    }\n\n    /**\n     * Gets called whenever a tag gets added to an entity.\n     *\n     * @private\n     */\n    _entityTagAdd(entity: Entity, tag: string): void {\n        const entities = mapGet(this._tagToEntities, tag, Array as ArrayCtor<Entity>);\n        entities.push(entity);\n        entity._tagIndexMap.set(tag, entities.length - 1);\n    }\n\n    /**\n     * Gets called whenever a component type gets added to a system.\n     *\n     * @private\n     */\n    _systemTypeNameAdd(system: System, typeName: string): void {\n        const systems = mapGet(this._typeNameToSystem, typeName, Array as ArrayCtor<System>);\n        systems.push(system);\n        system.typeNames.push(typeName);\n    }\n}\n","/**\n * Checks to see if a and b are approximately equal according to the tolerance.\n *\n * @memberof ESSEM\n * @param a - The first value.\n * @param b - The second value.\n * @param {number} [tolerance=0.001] - The range to check in.\n * @return Whether or not the values are approximately equal.\n */\nexport function approxEquals(a: number, b: number, tolerance: number = 0.001): boolean {\n    return Math.abs(a - b) <= tolerance;\n}\n\n/**\n * Constant that converts degrees to radians.\n * Use the essem.js provided functions to convert instead.\n *\n * @memberof ESSEM\n * @type number\n */\nexport const DEG_TO_RAD: number = Math.PI / 180;\n\n/**\n * Converts degrees to radians.\n *\n * @memberof ESSEM\n * @param degrees - Degrees to convert.\n * @return Radians.\n */\nexport function toRadians(degrees: number): number {\n    return degrees * DEG_TO_RAD;\n}\n\n/**\n * Constant that converts radians to degrees.\n * Use the essem.js provided functions to convert instead.\n *\n * @memberof ESSEM\n * @type number\n */\nexport const RAD_TO_DEG: number = 180 / Math.PI;\n\n/**\n * Converts radians to degrees.\n *\n * @memberof ESSEM\n * @param radians - Radians to convert.\n * @return Degrees.\n */\nexport function toDegrees(radians: number): number {\n    return radians * RAD_TO_DEG;\n}\n\n/**\n * Constant that is equal to PI * 2.\n *\n * @memberof ESSEM\n */\nexport const TWO_PI = Math.PI * 2;\n","import { approxEquals } from \"./common\";\nimport { Matrix3 } from \"./matrix3\";\n\n/**\n * A 2 component vector with x and y.\n *\n * @memberof ESSEM\n */\nexport class Vector2 {\n    /**\n     * The x component of the vector.\n     */\n    x: number;\n\n    /**\n     * The y component of the vector.\n     */\n    y: number;\n\n    /**\n     * The cache for toArray.\n     */\n    private _array: Float32Array | null = null;\n\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    set(x = 0, y = 0): this {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    setVector(vector: Vector2): this {\n        this.x = vector.x;\n        this.y = vector.y;\n        return this;\n    }\n\n    clone(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n    toString(): string {\n        return `Vector2(${this.x}, ${this.y})`;\n    }\n\n    toArray(out?: Float32Array): Float32Array {\n        if (!this._array) this._array = new Float32Array(2);\n\n        const array = out ?? this._array;\n        array[0] = this.x;\n        array[1] = this.y;\n        return array;\n    }\n\n    add(vector: Vector2): this {\n        this.x += vector.x;\n        this.y += vector.y;\n        return this;\n    }\n\n    subtract(vector: Vector2): this {\n        this.x -= vector.x;\n        this.y -= vector.y;\n        return this;\n    }\n\n    multiply(scalar: number): this {\n        this.x *= scalar;\n        this.y *= scalar;\n        return this;\n    }\n\n    divide(scalar: number): this {\n        this.x /= scalar;\n        this.y /= scalar;\n        return this;\n    }\n\n    distanceSquared(vector: Vector2): number {\n        const x = this.x - vector.x;\n        const y = this.y - vector.y;\n        return x ** 2 + y ** 2;\n    }\n\n    distance(vector: Vector2): number {\n        return Math.sqrt(this.distanceSquared(vector));\n    }\n\n    magnitudeSquared(): number {\n        return this.x ** 2 + this.y ** 2;\n    }\n\n    magnitude(): number {\n        return Math.sqrt(this.magnitudeSquared());\n    }\n\n    normalize(): this {\n        this.divide(this.magnitude());\n        return this;\n    }\n\n    dot(vector: Vector2): number {\n        return this.x * vector.x + this.y + vector.y;\n    }\n\n    cross(vector: Vector2): number {\n        return this.x * vector.y - this.y * vector.x;\n    }\n\n    random(magnitude = 1): this {\n        const rValue = Math.random() * Math.PI * 2;\n        this.x = Math.cos(rValue) * magnitude;\n        this.y = Math.cos(rValue) * magnitude;\n        return this;\n    }\n\n    rotate(radians: number, origin: Vector2 = new Vector2()): this {\n        const pointX = this.x - origin.x;\n        const pointY = this.y - origin.y;\n\n        // perform rotation and translate to correct position\n        const sinC = Math.sin(radians);\n        const cosC = Math.cos(radians);\n        this.x = pointX * cosC - pointY * sinC + origin.x;\n        this.y = pointX * sinC + pointY * cosC + origin.y;\n        return this;\n    }\n\n    angle(origin: Vector2 = new Vector2()): number {\n        return Math.atan2(this.y - this.y, origin.x - origin.x);\n    }\n\n    exactEquals(vector: Vector2): boolean {\n        return this.x === vector.x && this.y === vector.y;\n    }\n\n    /**\n     * Checks to see if this vector is approximately equal to the input vector\n     * according to tolerance.\n     *\n     * @param vector - The input vector to compare.\n     * @param {number} [tolerance=0.001] - The range to check in.\n     * @return Whether or not the vectors are approximately equal.\n     */\n    approxEquals(vector: Vector2, tolerance: number = 0.001): boolean {\n        return (\n            approxEquals(this.x, vector.x, tolerance) && approxEquals(this.y, vector.y, tolerance)\n        );\n    }\n\n    transformMatrix3(matrix: Matrix3): this {\n        const x = this.x;\n        this.x = matrix.xScale * x + matrix.xSkew * this.y + matrix.xTrans;\n        this.y = matrix.ySkew * x + matrix.yScale * this.y + matrix.yTrans;\n        return this;\n    }\n}\n","import { mapGet } from \"src/utils/misc\";\nimport { AnyCtor } from \"src/utils/types\";\n\n/**\n * Event base class that all events must extend from.\n *\n * @memberof ESSEM\n */\nexport abstract class Event {\n    /**\n     * Whether or not the event has been handled. Set this to true to make it stopped\n     * being sent to all other event listeners.\n     */\n    handled = false;\n}\n\nexport type EventListenerFunc<T extends Event = Event> = (event: T) => void;\n\n/**\n * Used to add listeners and send events. It is automatically created when creating\n * {@link ESSEM.Application} and it can be accesed from `app.events`.\n *\n * @memberof ESSEM\n */\nexport class EventManager {\n    eventListenersMap: Map<string, EventListenerFunc[]> = new Map();\n\n    /**\n     * Adds a function to act as a listener to listen and receive the specified event.\n     *\n     * @param eventType - The event class or name for the listener to listen to.\n     * @param listenerFunc - The function that will receive the events.\n     */\n    addListener<T extends Event>(\n        eventType: AnyCtor<T> | string,\n        listenerFunc: EventListenerFunc<T>\n    ): void {\n        const eventName = (eventType as AnyCtor<T>).name ?? eventType;\n        const listeners = mapGet(this.eventListenersMap, eventName, Array) as EventListenerFunc[];\n        listeners.push(listenerFunc as EventListenerFunc<Event>);\n    }\n\n    /**\n     * Send a event for all event's listeners to get.\n     *\n     * @param event - An instance of the event to send. Same named classes will be considered as\n     *                the same event.\n     */\n    sendEvent(event: Event): void {\n        const eventName = event.constructor.name;\n        const listeners = mapGet(this.eventListenersMap, eventName, Array) as EventListenerFunc[];\n        for (let i = 0; i < listeners.length; i++) {\n            if (event.handled) break;\n            listeners[i](event);\n        }\n    }\n}\n","import { Event } from \"./event_manager\";\n\n/**\n * Event that is sent whenever a key is pressed.\n *\n * @memberof ESSEM\n */\nexport class KeyPressedEvent extends Event {\n    /**\n     * The key code (from window.KeyboardEvent) of the event.\n     */\n    readonly code: string;\n\n    /**\n     * If the key was repeated.\n     */\n    readonly repeated: boolean;\n\n    constructor(code: string, repeated: boolean) {\n        super();\n        this.code = code;\n        this.repeated = repeated;\n    }\n}\n\n/**\n * Event that is sent whenever a key is released.\n *\n * @memberof ESSEM\n */\nexport class KeyReleasedEvent extends Event {\n    /**\n     * The key code (from window.KeyboardEvent) of the event.\n     */\n    readonly code: string;\n\n    constructor(code: string) {\n        super();\n        this.code = code;\n    }\n}\n\n/**\n * Event that is sent whenever a key is typed.\n * This uses the actual key that the user types.\n *\n * @memberof ESSEM\n */\nexport class KeyTypedEvent extends Event {\n    /**\n     * The key of the event as in what the user actually typed. Eg: shift + x with be X.\n     */\n    readonly key: string;\n\n    constructor(key: string) {\n        super();\n        this.key = key;\n    }\n}\n\n/**\n * Event that is sent whenever a the mouse is pressed.\n *\n * @memberof ESSEM\n */\nexport class MousePressedEvent extends Event {\n    /*\n     * Which mouse button code (from window.MouseEvent) was used to click.\n     */\n    readonly button: number;\n\n    constructor(button: number) {\n        super();\n        this.button = button;\n    }\n}\n\n/**\n * Event that is sent whenever a the mouse is released.\n *\n * @memberof ESSEM\n */\nexport class MouseReleasedEvent extends Event {\n    /*\n     * Which mouse button code (from window.MouseEvent) was released.\n     */\n    readonly button: number;\n\n    constructor(button: number) {\n        super();\n        this.button = button;\n    }\n}\n\n/**\n * Event that is sent whenever a the mouse is moved.\n *\n * @memberof ESSEM\n */\nexport class MouseMovedEvent extends Event {\n    /**\n     * How much the mouse has moved on the x axis.\n     */\n    readonly offsetX: number;\n\n    /**\n     * How much the mouse has moved on the y axis.\n     */\n    readonly offsetY: number;\n\n    constructor(x: number, y: number) {\n        super();\n        this.offsetX = x;\n        this.offsetY = y;\n    }\n}\n\n/**\n * Event that is sent whenever a the mouse wheel is scrolled.\n *\n * @memberof ESSEM\n */\nexport class MouseScrolledEvent extends Event {\n    /**\n     * How much the mouse wheel has scrolled on the x axis.\n     */\n    readonly offsetX: number;\n\n    /**\n     * How much the mouse wheel has scrolled on the y axis.\n     */\n    readonly offsetY: number;\n\n    constructor(x: number, y: number) {\n        super();\n        this.offsetX = x;\n        this.offsetY = y;\n    }\n}\n","import { Vector2 } from \"src/math/vector2\";\nimport { Event, EventManager } from \"./event_manager\";\nimport {\n    KeyPressedEvent,\n    KeyReleasedEvent,\n    KeyTypedEvent,\n    MouseMovedEvent,\n    MousePressedEvent,\n    MouseReleasedEvent,\n    MouseScrolledEvent,\n} from \"./input_events\";\n\n/**\n * Event that gets sent whenever the canvas resizes.\n * This won't get called if just the window does though.\n *\n * @memberof ESSEM\n */\nexport class CanvasResizedEvent extends Event {\n    /**\n     * The current width of the canvas.\n     */\n    readonly width: number;\n\n    /**\n     * The current height of the canvas.\n     */\n    readonly height: number;\n\n    constructor(width: number, height: number) {\n        super();\n        this.width = width;\n        this.height = height;\n    }\n}\n\nexport interface ICanvasOptions {\n    fixedSize?: boolean;\n    width?: number;\n    height?: number;\n    aspectRatio?: number;\n}\n\n/**\n * Used for the canvas element and input events. It is automatically created when creating\n * {@link ESSEM.Application} and it can be accesed from `app.canvas`.\n *\n * @memberof ESSEM\n */\nexport class Canvas {\n    /**\n     * The DOM element of the canvas. Add this into your page by doing\n     * `document.body.appendChild(canvas)` in order to see yourr graphics.\n     */\n    element: HTMLCanvasElement;\n\n    /**\n     * Whether or not the canvas is fixed and cannot resize to fit window.\n     */\n    fixedSize: boolean;\n\n    /**\n     * The aspect ratio that the canvas will fit to if it resizes.\n     */\n    aspectRatio: number | null;\n\n    /**\n     * The current width of the canvas.\n     */\n    width!: number;\n\n    /**\n     * The current height of the canvas.\n     */\n    height!: number;\n\n    private _eventManager: EventManager;\n    private _pressedKeys: Map<string, boolean> = new Map();\n    private _pressedMouseButtons: Map<number, boolean> = new Map();\n    private _mousePosition: Vector2 = new Vector2();\n\n    /**\n     * @param {object} [options={}] - Parameters as an object for the Canvas.\n     * @param {number} [options.aspectRatio] - Aspect ratio for the canvas to resize to if fixedSize\n     *                                         is true. Leave empty for no aspect ratio.\n     * @param {boolean} [options.fixedSize=true] - Will resize to fit window if true.\n     * @param {number} [options.width=400] - Initial width.\n     * @param {number} [options.height=400] - Initial height.\n     */\n    constructor(options: ICanvasOptions = {}, eventManager: EventManager) {\n        this.fixedSize = options.fixedSize ?? true;\n        this._eventManager = eventManager;\n\n        this.aspectRatio = options.aspectRatio ?? null;\n        this.element = document.createElement(\"canvas\");\n\n        if (!this.fixedSize) {\n            this.resizeFull();\n        } else {\n            this.resizeCanvas(options.width ?? 400, options.height ?? 400);\n        }\n\n        window.addEventListener(\"keydown\", (event) => {\n            this._pressedKeys.set(event.code, true);\n            this._eventManager.sendEvent(new KeyPressedEvent(event.code, event.repeat));\n        });\n\n        window.addEventListener(\"keyup\", (event) => {\n            this._pressedKeys.set(event.code, false);\n            this._eventManager.sendEvent(new KeyReleasedEvent(event.code));\n        });\n\n        window.addEventListener(\"keypress\", (event) => {\n            this._eventManager.sendEvent(new KeyTypedEvent(event.key));\n        });\n\n        window.addEventListener(\"mousedown\", (event) => {\n            this._eventManager.sendEvent(new MousePressedEvent(event.button));\n            this._pressedMouseButtons.set(event.button, true);\n        });\n\n        window.addEventListener(\"mouseup\", (event) => {\n            this._eventManager.sendEvent(new MouseReleasedEvent(event.button));\n            this._pressedMouseButtons.set(event.button, false);\n        });\n\n        window.addEventListener(\"mousemove\", (event) => {\n            this._eventManager.sendEvent(new MouseMovedEvent(event.offsetX, event.offsetY));\n            this._mousePosition.set(event.clientX, event.clientY);\n        });\n\n        window.addEventListener(\"wheel\", (event) => {\n            this._eventManager.sendEvent(new MouseScrolledEvent(event.offsetX, event.offsetY));\n        });\n\n        window.addEventListener(\"resize\", () => {\n            if (!this.fixedSize) {\n                this.resizeFull();\n            }\n        });\n    }\n\n    /**\n     * Resizes the canvas to the specified width and height.\n     *\n     * @param width - The width to resize to.\n     * @param height - The height to resize to.\n     * @param {boolean} [sendEvent=true] - Whether or not to send a CanvasResizedEvent.\n     */\n    resizeCanvas(width: number, height: number, sendEvent: boolean = true): void {\n        this.width = width;\n        this.height = height;\n        this.element.width = width;\n        this.element.height = height;\n\n        if (sendEvent) {\n            this._eventManager.sendEvent(new CanvasResizedEvent(width, height));\n        }\n    }\n\n    /**\n     * Checks if the specified key is held down.\n     *\n     * @param keyCode - The key code (from window.KeyboardEvent) to check.\n     * @return Whether or not the key was held down.\n     */\n    isKeyPressed(keyCode: string): boolean {\n        return this._pressedKeys.get(keyCode) ?? false;\n    }\n\n    /**\n     * Checks if the specified mouse button is held down.\n     *\n     * @param button - The mouse button code (from window.MouseEvent) to check.\n     * @return Whether or not the mouse button was held down.\n     */\n    isMousePressed(button: number): boolean {\n        return this._pressedMouseButtons.get(button) ?? false;\n    }\n\n    /**\n     * Gets the current mouse position.\n     *\n     * @return The current mouse position.\n     */\n    getMousePosition(): Vector2 {\n        return this._mousePosition.clone();\n    }\n\n    /**\n     * Resizes the canvas to fit the window with accordence to the aspect ratio.\n     */\n    resizeFull(): void {\n        if (this.aspectRatio !== null) {\n            let height = window.innerHeight;\n            const aspectWidth = window.innerWidth / this.aspectRatio;\n            if (aspectWidth < height) height = aspectWidth;\n\n            this.resizeCanvas(height * this.aspectRatio, height);\n        } else {\n            this.resizeCanvas(window.innerWidth, window.innerHeight);\n        }\n    }\n}\n","import { assert } from \"src/utils/misc\";\n\nexport class AudioClip {\n    volume: number = 1;\n    loop: boolean = false;\n    playing: boolean = false;\n\n    readonly buffer: AudioBuffer;\n    source: AudioBufferSourceNode | null = null;\n    gain: GainNode | null = null;\n\n    private _context: AudioContext;\n\n    constructor(buffer: AudioBuffer, context: AudioContext) {\n        this.buffer = buffer;\n        this._context = context;\n    }\n\n    static async fromURL(url: string, context: AudioContext): Promise<AudioClip> {\n        const response = await fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        const decodedAudio = await context.decodeAudioData(arrayBuffer);\n        return new AudioClip(decodedAudio, context);\n    }\n\n    play(): void {\n        const source = this._context.createBufferSource();\n        source.buffer = this.buffer;\n        source.start(this._context.currentTime);\n        source.loop = this.loop;\n        source.onended = () => (this.playing = false);\n\n        const gain = this._context.createGain();\n        source.connect(gain);\n        gain.connect(this._context.destination);\n        gain.gain.value = this.volume;\n\n        this.playing = true;\n        this.source = source;\n        this.gain = gain;\n    }\n\n    stop(): void {\n        assert(this.source !== null, \"Can't stop when the audio clip has not started.\");\n        this.source.stop(this._context.currentTime);\n    }\n\n    toggle(): void {\n        this.playing ? this.stop() : this.play();\n    }\n}\n","import { assert } from \"src/utils/misc\";\n\nexport type TextureSource = HTMLImageElement | HTMLCanvasElement;\n\n/**\n * Class that is used to render images.\n *\n * @memberof ESSEM\n */\nexport class Texture {\n    source: TextureSource;\n    glTexture: WebGLTexture | null = null;\n    aspectRatio: number;\n\n    constructor(source: TextureSource) {\n        this.source = source;\n        this.aspectRatio = this.source.width / this.source.height;\n    }\n\n    /**\n     * Inits the texture. This will get automatically called when binding the texture.\n     *\n     * @param gl - An WebGL2 rendering context for the texture to use.\n     */\n    init(gl: WebGL2RenderingContext): void {\n        this.glTexture = gl.createTexture();\n        assert(this.glTexture !== null, \"Could not create glTexture!\");\n        this.bind(gl);\n        // TODO: add options for this\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.MIRRORED_REPEAT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.MIRRORED_REPEAT);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            this.source.width,\n            this.source.height,\n            0,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            this.source\n        );\n    }\n\n    /**\n     * Binds the texture.\n     *\n     * @param gl - An WebGL2 rendering context for the texture to use.\n     * @param slot - The texture slot for the texture to be binded to (optional).\n     */\n    bind(gl: WebGL2RenderingContext, slot?: number): void {\n        if (slot) {\n            gl.activeTexture(gl.TEXTURE0 + slot);\n        }\n\n        if (this.glTexture === null) {\n            this.init(gl);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this.glTexture);\n        }\n    }\n\n    dispose(gl: WebGL2RenderingContext): void {\n        gl.deleteTexture(this.glTexture);\n        this.glTexture = null;\n    }\n\n    static async fromURL(url: string): Promise<Texture> {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            image.src = url;\n            image.onload = () => {\n                const texture = new Texture(image);\n                resolve(texture);\n            };\n\n            image.onerror = (event) => reject(event);\n        });\n    }\n\n    static readonly WHITE = createWhiteTexture();\n}\n\nfunction createWhiteTexture(): Texture {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 16;\n    canvas.height = 16;\n\n    const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    context.fillStyle = \"white\";\n    context.fillRect(0, 0, 16, 16);\n    return new Texture(canvas);\n}\n","import { AnyCtor } from \"src/utils/types\";\nimport { AudioClip } from \"./audio_clip\";\nimport { Texture } from \"src/renderer/texture\";\n\ntype ResourceTypes = Texture | AudioClip;\ntype ResourceTypeNames = \"Texture\" | \"AudioClip\";\n\n/**\n * Used for loading resources such as images. It is automatically created when creating\n * {@link ESSEM.Application} and it can be accesed from `app.loader`.\n *\n * @memberof ESSEM\n */\nexport class Loader {\n    private _audioContext: AudioContext;\n\n    resourceURLs: [ResourceTypeNames, string][] = [];\n    resources: { [key: string]: ResourceTypes } = {};\n\n    constructor(audioContext: AudioContext) {\n        this._audioContext = audioContext;\n    }\n\n    add(resourceType: AnyCtor<ResourceTypes> | ResourceTypeNames, url: string): this {\n        const resourceTypeName = (resourceType as AnyCtor<ResourceTypes>).name ?? resourceType;\n        this.resourceURLs.push([resourceTypeName as ResourceTypeNames, url]);\n        return this;\n    }\n\n    async loadAll(): Promise<void> {\n        for (const [resourceTypeName, url] of this.resourceURLs) {\n            switch (resourceTypeName) {\n                case \"AudioClip\":\n                    this.resources[url] = await AudioClip.fromURL(url, this._audioContext);\n                    break;\n                case \"Texture\":\n                    this.resources[url] = await Texture.fromURL(url);\n            }\n        }\n\n        this.resourceURLs = [];\n    }\n}\n","import { Renderer } from \"src/renderer/renderer\";\nimport { Scene } from \"src/ecs/scene\";\nimport { System, SystemClass } from \"src/ecs/system\";\nimport { Canvas, CanvasResizedEvent, ICanvasOptions } from \"./canvas\";\nimport { Event, EventManager } from \"./event_manager\";\nimport { Loader } from \"./loader\";\nimport { sayHello } from \"src/utils/browser\";\n\n/** * Event that is sent whenever the Application initiates.\n *\n * @memberof ESSEM\n */\nexport class ApplicationInitEvent extends Event {}\n\n/**\n * Event that is sent whenever the Application updates.\n *\n * @memberof ESSEM\n */\nexport class ApplicationUpdateEvent extends Event {\n    /**\n     * The delta time of the update.\n     */\n    delta: number;\n\n    /**\n     * @param delta - The delta time of the update.\n     */\n    constructor(delta: number) {\n        super();\n        this.delta = delta;\n    }\n}\n\nexport interface IApplicationOptions {\n    canvasOptions?: ICanvasOptions;\n}\n\n/**\n * Class that is used for everything in essem.js.\n *\n * ## Example\n * ```js\n * // Create the application\n * const app = new ESSEM.Application();\n *\n * // Add the canvas element to the DOM\n * document.body.appendChild(app.canvas.element);\n *\n * // Create scene, add entities, add components ect.\n * const scene = app.createScene();\n * ```\n *\n * @memberof ESSEM\n */\nexport class Application {\n    audioContext: AudioContext = new AudioContext();\n    canvas: Canvas;\n    eventManager: EventManager = new EventManager();\n    loader: Loader;\n    renderer: Renderer;\n\n    lastFrameTime = 0;\n    running = true;\n\n    private _systemClasses: SystemClass[] = [];\n\n    /**\n     * @param {object} [options={}] - Optional parameters for Application.\n     * @param {object} [options.canvasOptions={}] - Optional parameters for the canvas.\n     *        See {@link ESSEM.Canvas}\n     */\n    constructor(options: IApplicationOptions = {}) {\n        this.canvas = new Canvas(options.canvasOptions, this.eventManager);\n        this.loader = new Loader(this.audioContext);\n        this.renderer = new Renderer(this.canvas.element);\n\n        setTimeout(async () => {\n            await this.loader.loadAll();\n            this.eventManager.sendEvent(new ApplicationInitEvent());\n\n            this.eventManager.addListener(CanvasResizedEvent, (event: CanvasResizedEvent) => {\n                this.renderer.gl.viewport(0, 0, event.width, event.height);\n            });\n\n            sayHello();\n\n            const loop = () => {\n                if (this.running) {\n                    this._onUpdate();\n                    requestAnimationFrame(loop);\n                }\n            };\n\n            requestAnimationFrame(loop);\n        });\n    }\n\n    /**\n     * The update function that gets called every requestAnimationFrame loop.\n     *\n     * @private\n     */\n    private _onUpdate(): void {\n        const now = performance.now();\n        const delta = now - this.lastFrameTime;\n\n        this.renderer.update();\n        this.eventManager.sendEvent(new ApplicationUpdateEvent(delta));\n\n        this.lastFrameTime = now;\n    }\n\n    /**\n     * Registers a parameterized array of system classes.\n     * Use like this: `app.registerSystem(System1, System2, ...);`\n     * Do all the registering at the start or the system will not work.\n     *\n     * @param {...SystemClass} systemClasses - An parameterized array of classes that extends\n     *        {@link ESSEM.System}\n     */\n    registerSystem(...systemClasses: SystemClass[]): void {\n        this._systemClasses.push(...systemClasses);\n    }\n\n    /**\n     * Creates a new scene.\n     *\n     * @return A new Scene.\n     */\n    createScene(): Scene {\n        const scene = new Scene();\n        const systems: System[] = [];\n        this._systemClasses.forEach((systemClass) => {\n            const system = new systemClass(scene);\n            system.setup(this);\n            systems.push(system);\n        });\n\n        scene.systems = systems;\n        return scene;\n    }\n}\n","import { Vector2 } from \"./vector2\";\n\n/**\n * The matrix as this class make it a lot faster since there are less values to work with.\n *\n * Here's a representation of it:\n * ```js\n * | xScale | xSkew | xTrans |\n * | ySkew  | yScale| yTrans |\n * | 0      | 0     | 1      |\n * ```\n *\n * @memberof ESSEM\n */\nexport class Matrix3 {\n    xScale: number;\n    ySkew: number;\n    xSkew: number;\n    yScale: number;\n    xTrans: number;\n    yTrans: number;\n\n    private _array: Float32Array | null = null;\n\n    constructor(xScale = 1, ySkew = 0, xSkew = 0, yScale = 1, xTrans = 0, yTrans = 0) {\n        this.xScale = xScale;\n        this.ySkew = ySkew;\n        this.xSkew = xSkew;\n        this.yScale = yScale;\n        this.xTrans = xTrans;\n        this.yTrans = yTrans;\n    }\n\n    clone(): Matrix3 {\n        return new Matrix3(\n            this.xScale,\n            this.ySkew,\n            this.xSkew,\n            this.yScale,\n            this.xTrans,\n            this.yTrans\n        );\n    }\n\n    toString(): string {\n        return (\n            `Matrix3(\\n\\t` +\n            `${this.xScale}, ${this.xSkew}, ${this.xTrans},\\n\\t` +\n            `${this.ySkew}, ${this.yScale}, ${this.yTrans},\\n\\t` +\n            `0, 0, 1\\n)`\n        );\n    }\n\n    toArray(transpose = true, out?: Float32Array): Float32Array {\n        if (!this._array) this._array = new Float32Array(9);\n\n        const array = out ?? this._array;\n\n        if (transpose) {\n            array[0] = this.xScale;\n            array[1] = this.ySkew;\n            array[2] = 0;\n            array[3] = this.xSkew;\n            array[4] = this.yScale;\n            array[5] = 0;\n            array[6] = this.xTrans;\n            array[7] = this.yTrans;\n            array[8] = 1;\n        } else {\n            array[0] = this.xScale;\n            array[1] = this.xSkew;\n            array[2] = this.xTrans;\n            array[3] = this.ySkew;\n            array[4] = this.yScale;\n            array[5] = this.yTrans;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    }\n\n    invert(): this {\n        const xScale = this.xScale;\n        const ySkew = this.ySkew;\n        const xSkew = this.xSkew;\n        const yScale = this.yScale;\n        const xTrans = this.xTrans;\n        const det = xScale * yScale - ySkew * xSkew;\n        if (det === 0) return this;\n\n        this.xScale = yScale / det;\n        this.ySkew = -ySkew / det;\n        this.xSkew = -xSkew / det;\n        this.yScale = xScale / det;\n        this.xTrans = (xSkew * this.yTrans - yScale * xTrans) / det;\n        this.yTrans = -(xScale * this.yTrans - xSkew * xTrans) / det;\n        return this;\n    }\n\n    identity(): this {\n        this.xScale = 1;\n        this.ySkew = 0;\n        this.xSkew = 0;\n        this.yScale = 1;\n        this.xTrans = 0;\n        this.yTrans = 0;\n        return this;\n    }\n\n    multiply(matrix: Matrix3): this {\n        const xScale = this.xScale;\n        const ySkew = this.ySkew;\n        const xSkew = this.xSkew;\n        const yScale = this.yScale;\n\n        this.xScale = xScale * matrix.xScale + xSkew * matrix.ySkew;\n        this.ySkew = ySkew * matrix.xScale + yScale * matrix.ySkew;\n        this.xSkew = xScale * matrix.xSkew + xSkew * matrix.yScale;\n        this.yScale = ySkew * matrix.xSkew + yScale * matrix.yScale;\n\n        this.xTrans = xScale * matrix.xTrans + xSkew * matrix.yTrans + this.xTrans;\n        this.yTrans = ySkew * matrix.xTrans + yScale * matrix.yTrans + this.yTrans;\n        return this;\n    }\n\n    multiplyFront(matrix: Matrix3): this {\n        const xTrans = this.xTrans;\n\n        if (\n            matrix.xScale !== 1 ||\n            matrix.ySkew !== 0 ||\n            matrix.xSkew !== 0 ||\n            matrix.yScale !== 1\n        ) {\n            const xScale1 = this.xScale;\n            const xSkew = this.xSkew;\n\n            this.xScale = xScale1 * matrix.xScale + this.ySkew * matrix.xSkew;\n            this.ySkew = xScale1 * matrix.ySkew + this.ySkew * matrix.yScale;\n            this.xSkew = xSkew * matrix.xScale + this.yScale * matrix.xSkew;\n            this.yScale = xSkew * matrix.ySkew + this.yScale * matrix.yScale;\n        }\n\n        this.xTrans = xTrans * matrix.xScale + this.yTrans * matrix.xSkew + matrix.xTrans;\n        this.yTrans = xTrans * matrix.ySkew + this.yTrans * matrix.yScale + matrix.yTrans;\n        return this;\n    }\n\n    translate(x: number, y: number): this {\n        this.xTrans += x;\n        this.yTrans += y;\n        return this;\n    }\n\n    scale(x: number, y: number): this {\n        this.xScale *= x;\n        this.yScale *= y;\n        this.xSkew *= x;\n        this.ySkew *= y;\n        this.xTrans *= x;\n        this.yTrans *= y;\n        return this;\n    }\n\n    rotate(angle: number): this {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        const xScale = this.xScale;\n        const xSkew = this.xSkew;\n        const xTrans = this.xTrans;\n\n        this.xScale = xScale * cos - this.ySkew * sin;\n        this.ySkew = xScale * sin + this.ySkew * cos;\n        this.xSkew = xSkew * cos - this.yScale * sin;\n        this.yScale = xSkew * sin + this.yScale * cos;\n        this.xTrans = xTrans * cos - this.yTrans * sin;\n        this.yTrans = xTrans * sin + this.yTrans * cos;\n        return this;\n    }\n\n    // TODO: perhaps make this not use matrix funcions?\n    transform(position: Vector2, scale: Vector2, rotation: number): this {\n        this.identity();\n        if (rotation !== 0) {\n            this.rotate(rotation);\n        }\n\n        this.translate(position.x, position.y).scale(scale.x, scale.y);\n        return this;\n    }\n\n    projection(left: number, right: number, bottom: number, top: number): this {\n        const rl = right - left;\n        const tp = top - bottom;\n\n        this.xScale = 2 / rl;\n        this.yScale = 2 / tp;\n        this.xTrans = (right + left) / rl;\n        this.yTrans = (top + bottom) / tp;\n        this.xSkew = 0;\n        this.ySkew = 0;\n        return this;\n    }\n}\n","import { Matrix3 } from \"src/math/matrix3\";\n\n/**\n * Component to handle camera stuff\n * All render systems will look for a entity tagged 'MainCamera' as the camera to render with.\n *\n * @memberof ESSEM\n */\nexport class CameraComponent {\n    aspectRatio = 0;\n    fixedAspectRatio: boolean;\n    size: number;\n    private _projectionMatrix: Matrix3 = new Matrix3();\n\n    constructor(zoom = 5, fixedAspectRatio = false) {\n        this.size = zoom;\n        this.fixedAspectRatio = fixedAspectRatio;\n    }\n\n    setViewportSize(width: number, height: number): void {\n        this.aspectRatio = width / height;\n    }\n\n    getProjectionMatrix(): Matrix3 {\n        return this._projectionMatrix.projection(\n            -this.size * this.aspectRatio,\n            this.size * this.aspectRatio,\n            this.size,\n            -this.size\n        );\n    }\n}\n","import { Texture } from \"src/renderer/texture\";\nimport { hexToRGBA } from \"src/utils/colors\";\n\n/**\n * Component that handles sprite info like textures and colours.\n *\n * @memberof ESSEM\n */\nexport class SpriteComponent {\n    /**\n     * The texture of the sprite in use.\n     */\n    readonly texture: Texture;\n\n    /**\n     * The RGBA colour of the sprite as a 4 length Float32Array.\n     */\n    rgbaColor!: Float32Array;\n\n    private _hexColor!: number;\n\n    /**\n     * @param texture - Texture to use. This should be resued between other components.\n     * @param color -\n     */\n    constructor(texture: Texture, color = 0xffffff) {\n        this.texture = texture;\n        this.color = color;\n    }\n\n    /**\n     * Colour of the sprite in hexadecimal.\n     */\n    set color(hex: number) {\n        this._hexColor = hex;\n        this.rgbaColor = hexToRGBA(hex);\n    }\n\n    get color(): number {\n        return this._hexColor;\n    }\n}\n","import { Entity } from \"../entity\";\nimport { Matrix3 } from \"src/math/matrix3\";\nimport { Vector2 } from \"src/math/vector2\";\n\n/**\n * Component that holds the position, scale and rotation of an entity.\n *\n * @memberof ESSEM\n */\nexport class TransformComponent {\n    private _position: Vector2;\n    private _scale: Vector2;\n    private _rotation: number;\n    private _transformMatrix: Matrix3 = new Matrix3();\n    private _transformValid = false;\n\n    /**\n     * @param position - Starting position.\n     * @param scale - Starting scale.\n     * @param rotation - Starting rotation.\n     */\n    constructor(position = new Vector2(), scale = new Vector2(1, 1), rotation = 0) {\n        this._position = position;\n        this._scale = scale;\n        this._rotation = rotation;\n    }\n\n    /**\n     * Matrix that holds the transform of the component.\n     * This value will be cached and invalidated when making any changes to the component.\n     *\n     * @readonly\n     */\n    get transformMatrix(): Matrix3 {\n        if (!this._transformValid) {\n            this._transformMatrix.transform(this._position, this._scale, this._rotation);\n            this._transformValid = true;\n        }\n\n        return this._transformMatrix;\n    }\n\n    /**\n     * Rotation of the component.\n     */\n    set rotation(rotation: number) {\n        this._transformValid = false;\n        this._rotation = rotation;\n    }\n\n    get rotation(): number {\n        return this._rotation;\n    }\n\n    /**\n     * Position of the component.\n     */\n    set position(position: Vector2) {\n        this._transformValid = false;\n        this._position = position;\n    }\n\n    get position(): Vector2 {\n        this._transformValid = false;\n        return this._position;\n    }\n\n    /**\n     * Scale of the component.\n     */\n    set scale(scale: Vector2) {\n        this._transformValid = false;\n        this._scale = scale;\n    }\n\n    get scale(): Vector2 {\n        this._transformValid = false;\n        return this._scale;\n    }\n\n    static getGlobalPosition(entity: Entity): Vector2 {\n        const vector = entity.getComponent(TransformComponent)._position.clone();\n        entity.forEachParent((parent) => {\n            vector.add(parent.getComponent(TransformComponent)._position);\n        });\n\n        return vector;\n    }\n\n    static getGlobalScale(entity: Entity): Vector2 {\n        const vector = entity.getComponent(TransformComponent)._scale.clone();\n        entity.forEachParent((parent) => {\n            vector.add(parent.getComponent(TransformComponent)._scale);\n        });\n\n        return vector;\n    }\n\n    static getGlobalRotation(entity: Entity): number {\n        let rotation = entity.getComponent(TransformComponent)._rotation;\n        entity.forEachParent((parent) => {\n            rotation += parent.getComponent(TransformComponent)._rotation;\n        });\n\n        return rotation;\n    }\n\n    /**\n     * Gets the global transform matrix relative to all the entity's parents.\n     *\n     * @param entity - Entity to get the global transform matrix of.\n     * @return A global transform matrix.\n     */\n    static getGlobalTransformMatrix(entity: Entity): Matrix3 {\n        const matrix = entity.getComponent(TransformComponent).transformMatrix;\n        entity.forEachParent((parent) => {\n            matrix.multiplyFront(parent.getComponent(TransformComponent).transformMatrix);\n        });\n\n        return matrix;\n    }\n}\n","import { Application } from \"src/core/application\";\nimport { ComponentClass, Entity } from \"./entity\";\nimport { Scene } from \"./scene\";\nimport { getTypeName } from \"src/utils/misc\";\n\nexport type SystemClass = new (scene: Scene) => System;\n\n/**\n * System base class to extend to collect all the wanted entities and do stuff to them.\n * * ## Example * ```js\n * // System that logs hello for each entity with a transform component\n * class HelloSystem extends ESSEM.System {\n *     setup(app) {\n *         app.eventManager.addListener(ESSEM.ApplicationUpdateEvent, this.onUpdate.bind(this));\n *         this.setComponents(ESSEM.TransformComponent);\n *     }\n *\n *     onUpdate() {\n *         for (entity of this.entities) {\n *             const transform = entity.getComponent(ESSEM.TransformComponent);\n *             console.log(\"Hello from: \" + tranform.position.toString())\n *         }\n *     }\n * }\n *\n * const app = new ESSEM.Application();\n * app.registerSystem(HelloSystem);\n * const scene = app.createScene()\n *\n * // Logs \"Hello from: Vector2(0, 1)\" every frame\n * const entity = scene.createEntity();\n * entity.addComponent(new TransformComponent(new ESSEM.Vector2(0, 1)));\n * ```\n *\n * @memberof ESSEM\n */\nexport abstract class System {\n    /**\n     * The entities that have the system's component types.\n     */\n    entities: Entity[] = [];\n\n    /**\n     * The name of the component types that has been set.\n     */\n    typeNames: string[] = [];\n\n    /**\n     * The scene that the system is active on.\n     */\n    protected scene: Scene;\n\n    constructor(scene: Scene) {\n        this.scene = scene;\n    }\n\n    /**\n     * Abstract function that gets called when the system is created. This should be overrided to\n     * setup component types and event listeners.\n     *\n     * @param app - The application that the system was registed from. Use this to register event\n     *        listeners and other stuff.\n     */\n    abstract setup(app: Application): void;\n\n    /**\n     * Optional abstract function that gets called whenever a matching entity gets added.\n     *\n     * @param entity - The entity that was added to this.entites.\n     */\n    onEntityAdd?(entity: Entity): void;\n\n    /**\n     * Sets the component types that the system will use to collect entities.\n     * Note that previous sets of component types will not be removed and so new sets will just be\n     * added on top.\n     *\n     * @param componentTypes - Array of component classes or names.\n     */\n    setComponents(componentTypes: (ComponentClass | string)[]): void {\n        for (const componentType of componentTypes) {\n            const typeName = getTypeName(componentType);\n            this.scene._systemTypeNameAdd(this, typeName);\n        }\n    }\n}\n","import { Application } from \"src/core/application\";\nimport { Canvas, CanvasResizedEvent } from \"src/core/canvas\";\nimport { Entity } from \"../entity\";\nimport { System } from \"../system\";\nimport { CameraComponent } from \"src/ecs/components/camera_component\";\nimport { TransformComponent } from \"src/ecs/components/transform_component\";\n\n/**\n * Register this system when handling cameras.\n *\n * @memberof ESSEM\n */\nexport class CameraSystem extends System {\n    canvas!: Canvas;\n\n    setup(app: Application): void {\n        this.setComponents([TransformComponent, CameraComponent]);\n        app.eventManager.addListener(CanvasResizedEvent, this.onResized.bind(this));\n        this.canvas = app.canvas;\n    }\n\n    onEntityAdd(entity: Entity): void {\n        const cameraComponent = entity.getComponent(CameraComponent);\n        if (!cameraComponent.fixedAspectRatio) {\n            cameraComponent.setViewportSize(this.canvas.width, this.canvas.height);\n        }\n    }\n\n    onResized(event: CanvasResizedEvent): void {\n        this.entities.forEach((entity) => {\n            const cameraComponent = entity.getComponent(CameraComponent);\n            if (!cameraComponent.fixedAspectRatio) {\n                cameraComponent.setViewportSize(event.width, event.height);\n            }\n        });\n    }\n}\n","import { Matrix3 } from \"src/math/matrix3\";\nimport { Vector2 } from \"src/math/vector2\";\nimport { assert } from \"src/utils/misc\";\n\nexport class Shader {\n    vertexSrc: string;\n    fragmentSrc: string;\n    name: string;\n\n    glProgram: WebGLProgram | null = null;\n    uniformLocationCache: Map<string, WebGLUniformLocation> = new Map();\n\n    constructor(vertexSrc: string, fragmentSrc: string, name = \"Default\") {\n        this.vertexSrc = vertexSrc;\n        this.fragmentSrc = fragmentSrc;\n        this.name = name;\n    }\n\n    init(gl: WebGL2RenderingContext): void {\n        const glVertexShader = this._compileGLShader(gl, gl.VERTEX_SHADER, this.vertexSrc);\n        const glFragmentShader = this._compileGLShader(gl, gl.FRAGMENT_SHADER, this.fragmentSrc);\n\n        this.glProgram = gl.createProgram();\n        assert(this.glProgram !== null, `Could not create glProgram!`);\n        gl.attachShader(this.glProgram, glVertexShader);\n        gl.attachShader(this.glProgram, glFragmentShader);\n\n        gl.linkProgram(this.glProgram);\n        if (!gl.getProgramParameter(this.glProgram, gl.LINK_STATUS)) {\n            const programLog = gl.getProgramInfoLog(this.glProgram);\n            throw new Error(`Program failed to link in '${this.name}' shader!\\n${programLog}`);\n        }\n\n        gl.deleteShader(glVertexShader);\n        gl.deleteShader(glFragmentShader);\n    }\n\n    bind(gl: WebGL2RenderingContext): void {\n        if (!this.glProgram) {\n            this.init(gl);\n        }\n\n        gl.useProgram(this.glProgram);\n    }\n\n    dispose(gl: WebGL2RenderingContext): void {\n        gl.deleteProgram(this.glProgram);\n    }\n\n    getUniformLocation(gl: WebGL2RenderingContext, name: string): WebGLUniformLocation {\n        const cachedLocation = this.uniformLocationCache.get(name);\n        if (cachedLocation !== undefined) {\n            return cachedLocation;\n        }\n\n        assert(this.glProgram !== null, `Has not initialized yet in '${this.name}' shader!`);\n        const location = gl.getUniformLocation(this.glProgram, name);\n        assert(location !== null, `Uniform '${name}' does not appear to exist!`);\n\n        this.uniformLocationCache.set(name, location);\n        return location;\n    }\n\n    setFloat1(gl: WebGL2RenderingContext, name: string, value: number): void {\n        gl.uniform1f(this.getUniformLocation(gl, name), value);\n    }\n\n    setFloat2(gl: WebGL2RenderingContext, name: string, value: Vector2): void {\n        gl.uniform2f(this.getUniformLocation(gl, name), value.x, value.y);\n    }\n\n    setInt1(gl: WebGL2RenderingContext, name: string, value: number): void {\n        gl.uniform1i(this.getUniformLocation(gl, name), value);\n    }\n\n    setIntArray(gl: WebGL2RenderingContext, name: string, value: Int32Array): void {\n        gl.uniform1iv(this.getUniformLocation(gl, name), value);\n    }\n\n    setMatrix3(gl: WebGL2RenderingContext, name: string, value: Matrix3): void {\n        gl.uniformMatrix3fv(this.getUniformLocation(gl, name), false, value.toArray(true));\n    }\n\n    private _compileGLShader(\n        gl: WebGL2RenderingContext,\n        type: number,\n        source: string\n    ): WebGLShader {\n        const glShader = gl.createShader(type);\n        const shaderTypeName = type === gl.VERTEX_SHADER ? \"vertex\" : \"fragment\";\n        assert(glShader !== null, `Could not create ${shaderTypeName} shader!`);\n\n        gl.shaderSource(glShader, source);\n        gl.compileShader(glShader);\n\n        if (!gl.getShaderParameter(glShader, gl.COMPILE_STATUS)) {\n            const shaderLog = gl.getShaderInfoLog(glShader);\n            throw new Error(\n                `Failed to compile ${shaderTypeName} shader in '${this.name}' shader!\\n${shaderLog}`\n            );\n        }\n\n        return glShader;\n    }\n}\n","import { assert } from \"src/utils/misc\";\n\nexport class VertexArray {\n    glVertexArray: WebGLVertexArrayObject;\n    glIndexBuffer: WebGLBuffer | null = null;\n    glVertexBuffers: WebGLBuffer[] = [];\n\n    constructor(gl: WebGL2RenderingContext) {\n        const glVertexArray = gl.createVertexArray();\n        assert(glVertexArray !== null, \"Failed to create vertex array!\");\n        this.glVertexArray = glVertexArray;\n    }\n\n    bind(gl: WebGL2RenderingContext): void {\n        gl.bindVertexArray(this.glVertexArray);\n    }\n\n    addVertexBuffer(\n        gl: WebGL2RenderingContext,\n        vertices: Float32Array | Float64Array,\n        usage: number = WebGL2RenderingContext.STATIC_DRAW\n    ): WebGLBuffer {\n        this.bind(gl);\n        const glVertexBuffer = gl.createBuffer();\n        assert(glVertexBuffer !== null, \"Failed to create vertex buffer!\");\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, glVertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, vertices, usage);\n\n        this.glVertexBuffers.push(glVertexBuffer);\n        return glVertexBuffer;\n    }\n\n    setIndexBuffer(\n        gl: WebGL2RenderingContext,\n        indices: Uint8Array | Uint16Array | Uint32Array\n    ): WebGLBuffer {\n        this.bind(gl);\n        const glIndexBuffer = gl.createBuffer();\n        assert(glIndexBuffer !== null, \"Failed to create index buffer!\");\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, glIndexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\n        this.glIndexBuffer = glIndexBuffer;\n        return glIndexBuffer;\n    }\n\n    dispose(gl: WebGL2RenderingContext): void {\n        this.glVertexBuffers.forEach((buffer) => {\n            gl.deleteBuffer(buffer);\n        });\n\n        gl.deleteBuffer(this.glIndexBuffer);\n        gl.deleteVertexArray(this.glVertexArray);\n    }\n}\n","import { Renderer } from \"./renderer\";\nimport { Shader } from \"./shader\";\nimport { VertexArray } from \"./vertex_array\";\nimport textureVertexSrc from \"./shaders/texture_vert.glsl\";\nimport textureFragmentSrc from \"./shaders/texture_frag.glsl\";\nimport { Texture } from \"./texture\";\nimport { Matrix3 } from \"src/math/matrix3\";\n\nexport abstract class AbstractBatchRenderer {\n    static readonly vertexSize = 9; // position (2) + texCoord (2) + texture index (1) + color (4)\n    static readonly maxDraws = 1000;\n    static readonly maxVertices =\n        AbstractBatchRenderer.maxDraws * 4 * AbstractBatchRenderer.vertexSize;\n    static readonly maxIndices = AbstractBatchRenderer.maxDraws * 6;\n    static readonly maxVerticesBytes =\n        AbstractBatchRenderer.maxVertices * Float32Array.BYTES_PER_ELEMENT;\n\n    renderer: Renderer;\n    vertexArray: VertexArray;\n    vertexBuffer: WebGLBuffer;\n    textureShader: Shader;\n    textureSlots: Texture[];\n    textureToSlotMap: Map<Texture, number> = new Map();\n    vertices: Float32Array = new Float32Array(AbstractBatchRenderer.maxVertices);\n    indices: Uint16Array = new Uint16Array(AbstractBatchRenderer.maxIndices);\n    verticesIndex = 0;\n    indicesCount = 0;\n    textureSlotIndex = 0;\n\n    constructor(renderer: Renderer) {\n        this.renderer = renderer;\n        const gl = renderer.gl;\n\n        this.vertexArray = new VertexArray(gl);\n        this.vertexBuffer = this.vertexArray.addVertexBuffer(gl, this.vertices, gl.DYNAMIC_DRAW);\n\n        for (let i = 0, offset = 0; i < AbstractBatchRenderer.maxIndices; i += 6, offset += 4) {\n            this.indices[i] = offset;\n            this.indices[i + 1] = offset + 1;\n            this.indices[i + 2] = offset + 2;\n\n            this.indices[i + 3] = offset + 2;\n            this.indices[i + 4] = offset + 3;\n            this.indices[i + 5] = offset;\n        }\n\n        this.vertexArray.setIndexBuffer(gl, this.indices);\n\n        const stride = AbstractBatchRenderer.vertexSize * Float32Array.BYTES_PER_ELEMENT;\n        gl.enableVertexAttribArray(0);\n        gl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n        gl.enableVertexAttribArray(1);\n        gl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * Float32Array.BYTES_PER_ELEMENT);\n        gl.enableVertexAttribArray(2);\n        gl.vertexAttribPointer(2, 1, gl.FLOAT, false, stride, 4 * Float32Array.BYTES_PER_ELEMENT);\n        gl.enableVertexAttribArray(3);\n        gl.vertexAttribPointer(3, 4, gl.FLOAT, false, stride, 5 * Float32Array.BYTES_PER_ELEMENT);\n\n        // TODO: abstract shader\n        this.textureShader = new Shader(textureVertexSrc, textureFragmentSrc, \"Sprite\");\n        this.textureShader.bind(gl);\n\n        const samplers = new Int32Array(renderer.maxTextureSlots).map((_, i) => i);\n        this.textureShader.setIntArray(gl, \"u_textures\", samplers);\n\n        this.textureSlots = new Array(renderer.maxTextureSlots).fill(undefined);\n    }\n\n    beginScene(viewProjection: Matrix3): void {\n        const gl = this.renderer.gl;\n        this.textureShader.bind(gl);\n        this.textureShader.setMatrix3(gl, \"u_viewProjection\", viewProjection);\n\n        this.startBatch();\n    }\n\n    endScene(): void {\n        this.flush();\n    }\n\n    startBatch(): void {\n        this.verticesIndex = 0;\n        this.indicesCount = 0;\n    }\n\n    nextBatch(): void {\n        this.flush();\n        this.startBatch();\n        this.textureSlotIndex = 0;\n    }\n\n    flush(): void {\n        if (this.indicesCount === 0 || this.verticesIndex === 0) return;\n\n        const gl = this.renderer.gl;\n\n        // set buffer data\n        const vertices =\n            this.verticesIndex === AbstractBatchRenderer.maxVertices\n                ? this.vertices\n                : this.vertices.subarray(0, this.verticesIndex);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n\n        // bind textures\n        for (let i = 0; i < this.textureSlotIndex; i++) {\n            this.textureSlots[i].bind(gl, i);\n        }\n\n        // now draw!\n        this.vertexArray.bind(gl);\n        gl.drawElements(gl.TRIANGLES, this.indicesCount, gl.UNSIGNED_SHORT, 0);\n    }\n\n    getTextureSlot(texture: Texture): number {\n        let slot = this.textureToSlotMap.get(texture);\n        if (slot === undefined) {\n            if (this.textureSlotIndex >= this.renderer.maxTextureSlots) this.nextBatch();\n\n            slot = this.textureSlotIndex;\n            this.textureSlots[this.textureSlotIndex] = texture;\n            this.textureToSlotMap.set(texture, this.textureSlotIndex);\n            this.textureSlotIndex++;\n        }\n\n        return slot;\n    }\n}\n","import { AbstractBatchRenderer } from \"src/renderer/abstract_batch_renderer\";\nimport { Application, ApplicationUpdateEvent } from \"src/core/application\";\nimport { CameraComponent } from \"src/ecs/components/camera_component\";\nimport { Entity } from \"../entity\";\nimport { SpriteComponent } from \"src/ecs/components/sprite_component\";\nimport { System } from \"../system\";\nimport { TransformComponent } from \"src/ecs/components/transform_component\";\nimport { Vector2 } from \"src/math/vector2\";\n\nexport class SpriteRenderer extends AbstractBatchRenderer {\n    // prettier-ignore\n    static vertexPositions: Float32Array = new Float32Array([\n        -0.5, -0.5,   \n         0.5, -0.5,   \n         0.5,  0.5,   \n        -0.5,  0.5,  ]);\n\n    // prettier-ignore\n    static texCoords: Float32Array = new Float32Array([\n        0.0, 0.0, \n        1.0, 0.0, \n        1.0, 1.0, \n        0.0, 1.0, \n    ]);\n\n    private _cacheVector: Vector2 = new Vector2();\n\n    drawSprite(entity: Entity): void {\n        if (this.indicesCount >= AbstractBatchRenderer.maxIndices) this.nextBatch();\n        const matrix = TransformComponent.getGlobalTransformMatrix(entity);\n        const sprite = entity.getComponent(SpriteComponent);\n\n        for (let i = 0; i < 4; i++) {\n            const index = i * 2;\n            this._cacheVector\n                .set(\n                    SpriteRenderer.vertexPositions[index] * sprite.texture.aspectRatio,\n                    SpriteRenderer.vertexPositions[index + 1]\n                )\n                .transformMatrix3(matrix);\n            this.vertices[this.verticesIndex++] = this._cacheVector.x;\n            this.vertices[this.verticesIndex++] = this._cacheVector.y;\n            this.vertices[this.verticesIndex++] = SpriteRenderer.texCoords[index];\n            this.vertices[this.verticesIndex++] = SpriteRenderer.texCoords[index + 1];\n            this.vertices[this.verticesIndex++] = this.getTextureSlot(sprite.texture);\n            this.vertices[this.verticesIndex++] = sprite.rgbaColor[0];\n            this.vertices[this.verticesIndex++] = sprite.rgbaColor[1];\n            this.vertices[this.verticesIndex++] = sprite.rgbaColor[2];\n            this.vertices[this.verticesIndex++] = sprite.rgbaColor[3];\n        }\n\n        this.indicesCount += 6;\n    }\n}\n\n/**\n * Register this system to render sprites.\n *\n * @memberof ESSEM\n */\nexport class SpriteRendererSystem extends System {\n    spriteRenderer!: SpriteRenderer;\n\n    setup(app: Application): void {\n        this.setComponents([TransformComponent, SpriteComponent]);\n        app.eventManager.addListener(ApplicationUpdateEvent, this.onUpdate.bind(this));\n        this.spriteRenderer = new SpriteRenderer(app.renderer);\n    }\n\n    onUpdate(): void {\n        const mainCamera = this.scene.getEntitesByTag(\"MainCamera\")[0];\n        if (mainCamera === undefined) return;\n\n        const viewProjection = mainCamera.getComponent(CameraComponent).getProjectionMatrix();\n        viewProjection.multiply(\n            mainCamera.getComponent(TransformComponent).transformMatrix.invert()\n        );\n\n        this.spriteRenderer.beginScene(viewProjection);\n        this.entities.forEach((entity) => {\n            this.spriteRenderer.drawSprite(entity);\n        });\n\n        this.spriteRenderer.endScene();\n    }\n}\n","/**\n * @namespace ESSEM\n */\n\nexport * from \"./core/application\";\nexport * from \"./core/audio_clip\";\nexport * from \"./core/canvas\";\nexport * from \"./core/event_manager\";\nexport * from \"./core/input_events\";\nexport * from \"./core/loader\";\n\nexport * from \"./ecs/components/camera_component\";\nexport * from \"./ecs/components/sprite_component\";\nexport * from \"./ecs/components/transform_component\";\nexport * from \"./ecs/systems/camera_system\";\nexport * from \"./ecs/systems/sprite_renderer_system\";\nexport * from \"./ecs/entity\";\nexport * from \"./ecs/scene\";\nexport * from \"./ecs/system\";\n\nexport * from \"./renderer/abstract_batch_renderer\";\nexport * from \"./renderer/renderer\";\nexport * from \"./renderer/shader\";\nexport * from \"./renderer/texture\";\nexport * from \"./renderer/vertex_array\";\n\nexport * from \"./math/common\";\nexport * from \"./math/vector2\";\nexport * from \"./math/matrix3\";\n\nexport * from \"./utils/browser\";\nexport * from \"./utils/colors\";\nexport * from \"./utils/misc\";\nexport * from \"./utils/types\";\n\n/**\n * The version of the essem.js library being used.\n *\n * @memberof ESSEM\n * @type string\n */\nexport const VERSION: string = \"$_VERSION\";\n\nif (window.__ESSEM__) {\n    throw new Error(\"essem.js is already imported!\");\n} else {\n    window.__ESSEM__ = true;\n}\n"],"names":[],"mappings":"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"}